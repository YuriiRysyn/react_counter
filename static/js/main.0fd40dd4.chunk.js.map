{"version":3,"sources":["components/Counter.jsx","App.js","index.js"],"names":["Counter","count","addOne","add100","increase","type","onClick","className","App","state","setState","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAU,SAAC,GAAD,IACrBC,EADqB,EACrBA,MACAC,EAFqB,EAErBA,OACAC,EAHqB,EAGrBA,OACAC,EAJqB,EAIrBA,SAJqB,OAMrB,oCACE,qCAEGH,GAEH,4BACEI,KAAK,SACLC,QAAS,kBAAMJ,KACfK,UAAU,OAHZ,SAOA,4BACEF,KAAK,SACLC,QAAS,kBAAMH,KACfI,UAAU,OAHZ,WAOA,4BACEF,KAAK,SACLC,QAAS,kBAAMF,KACfG,UAAU,OAHZ,cCYWC,G,kNAnCbC,MAAQ,CACNR,MAAO,G,EAGTC,OAAS,WACP,EAAKQ,UAAS,SAAAD,GAAK,MAAK,CACtBR,MAAOQ,EAAMR,MAAQ,O,EAIzBE,OAAS,WACP,EAAKO,UAAS,SAAAD,GAAK,MAAK,CACtBR,MAAOQ,EAAMR,MAAQ,S,EAIzBG,SAAW,WACT,EAAKF,UACH,EAAKO,MAAMR,MAAQ,GAAK,IAAM,GAAM,EAAKE,U,uDAGnC,IACAF,EAAUU,KAAKF,MAAfR,MAER,OACE,kBAAC,EAAD,CACEA,MAAOA,EACPC,OAAQS,KAAKT,OACbC,OAAQQ,KAAKR,OACbC,SAAUO,KAAKP,e,GA9BLQ,IAAMC,YCAxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.0fd40dd4.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Counter = ({\n  count,\n  addOne,\n  add100,\n  increase,\n}) => (\n  <>\n    <h1>\n      Count:\n      {count}\n    </h1>\n    <button\n      type=\"button\"\n      onClick={() => addOne()}\n      className=\"btn\"\n    >\n      Add 1\n    </button>\n    <button\n      type=\"button\"\n      onClick={() => add100()}\n      className=\"btn\"\n    >\n      Add 100\n    </button>\n    <button\n      type=\"button\"\n      onClick={() => increase()}\n      className=\"btn\"\n    >\n      Increase\n    </button>\n  </>\n);\n\nCounter.propTypes = {\n  count: PropTypes.number.isRequired,\n  addOne: PropTypes.func.isRequired,\n  add100: PropTypes.func.isRequired,\n  increase: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport { Counter } from './components/Counter';\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    count: 0,\n  }\n\n  addOne = () => {\n    this.setState(state => ({\n      count: state.count + 1,\n    }));\n  };\n\n  add100 = () => {\n    this.setState(state => ({\n      count: state.count + 100,\n    }));\n  };\n\n  increase = () => {\n    this.addOne();\n    ((this.state.count + 1) % 5 === 0) && this.add100();\n  };\n\n  render() {\n    const { count } = this.state;\n\n    return (\n      <Counter\n        count={count}\n        addOne={this.addOne}\n        add100={this.add100}\n        increase={this.increase}\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}